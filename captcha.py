from telethon import events
from telethon.tl.functions.messages import EditChatDefaultBannedRightsRequest
from telethon.tl.types import ChatBannedRights
import time

from .. import loader, utils

@loader.tds
class MuteOnJoinMod(loader.Module):
    """–ó–∞–≥–ª—É—à–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—Ç—Å—è –∫ —á–∞—Ç—É"""

    strings = {
        "name": "MuteOnJoin",
        "mute_msg": "ü§´ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –±—ã–ª–∏ –∑–∞–≥–ª—É—à–µ–Ω—ã –Ω–∞ 1 –º–∏–Ω—É—Ç—É..",
        "mute_in_chat": "‚úÖ –ó–∞–≥–ª—É—à–µ–Ω–∏–µ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤–∫–ª—é—á–µ–Ω–æ –≤ —ç—Ç–æ–º —á–∞—Ç–µ.",
        "unmute_in_chat": "üö´ –ó–∞–≥–ª—É—à–µ–Ω–∏–µ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤—ã–∫–ª—é—á–µ–Ω–æ –≤ —ç—Ç–æ–º —á–∞—Ç–µ.",
        "no_perms": "ü§∑‚Äç‚ôÇÔ∏è –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–≥–ª—É—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —ç—Ç–æ–º —á–∞—Ç–µ.",
    }

    async def client_ready(self, client, db):
        self._client = client
        self._db = db
        muted_chats = db.get("muteonjoin_chats")
        self._muted_chats = set(muted_chats) if muted_chats else set()

    async def on_unload(self):
        self._db.set("muteonjoin_chats", list(self._muted_chats))

    @loader.command(ru_doc="–í–∫–ª—é—á–∏—Ç—å –∑–∞–≥–ª—É—à–µ–Ω–∏–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ")
    async def mutein(self, message: events.NewMessage.Event):
        """–í–∫–ª—é—á–∏—Ç—å –∑–∞–≥–ª—É—à–µ–Ω–∏–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ"""
        chat = await message.get_chat()

        if not chat.admin_rights or not chat.admin_rights.ban_users:
            await utils.answer(message, self.strings("no_perms"))
            return

        try:
            await self._client(
                EditChatDefaultBannedRightsRequest(
                    chat.id,
                    ChatBannedRights(
                        until_date=2**31 - 1,
                        send_messages=True,
                    ),
                )
            )
        except Exception:
            await utils.answer(message, self.strings("no_perms"))
            return

        self._muted_chats.add(chat.id)
        await utils.answer(message, self.strings("mute_in_chat"))

    @loader.command(ru_doc="–û—Ç–∫–ª—é—á–∏—Ç—å –∑–∞–≥–ª—É—à–µ–Ω–∏–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ")
    async def muteout(self, message: events.NewMessage.Event):
        """–û—Ç–∫–ª—é—á–∏—Ç—å –∑–∞–≥–ª—É—à–µ–Ω–∏–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ"""
        chat = await message.get_chat()

        self._muted_chats.discard(chat.id)
        await utils.answer(message, self.strings("unmute_in_chat"))

    @loader.loop(interval=1, autostart=True)
    async def watcher(self):
        for chat_id in self._muted_chats:
            # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è join/add –≤ —ç—Ç–æ–º —á–∞—Ç–µ
            @events.register(
                events.NewMessage(chats=[chat_id], incoming=True),
                disable_errors=True,
            )
            async def mute_on_join(event: events.NewMessage.Event):
                if (
                    event.message.action
                    and (
                        event.message.action.user_joined
                        or event.message.action.user_added
                    )
                ):
                    # –ó–∞–≥–ª—É—à–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ 1 –º–∏–Ω—É—Ç—É
                    user_id = (
                        event.message.action.user_joined.user_id
                        if event.message.action.user_joined
                        else event.message.action.user_added.user_id
                    )
                    await self._client(
                        EditChatDefaultBannedRightsRequest(
                            chat_id,
                            ChatBannedRights(
                                until_date=time.time() + self.config["mute_duration"],
                                send_messages=True,
                            ),
                            user_id,
                        )
                    )
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥–ª—É—à–µ–Ω–∏–∏
                    await event.respond(self.strings("mute_msg"))
                    return

    def __init__(self):
        self.config = loader.ModuleConfig(
            loader.ConfigValue(
                "mute_duration", 60, "–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–≥–ª—É—à–µ–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö"
            )
        )
