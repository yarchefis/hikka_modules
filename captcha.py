# ---------------------------------------------------------------------------------
#  /\_/\  üåê –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ https://t.me/hikkamods_bot
# ( o.o )  üîê –õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω –ø–æ–¥ GNU AGPLv3.
#  > ^ <   ‚ö†Ô∏è –í–ª–∞–¥–µ–ª–µ—Ü heta.hikariatama.ru –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏–ª–∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–∞–≤ –Ω–∞ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç
# ---------------------------------------------------------------------------------
# Name: MuteNewUsers
# Author: OpenAI
# Description: –ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≥–ª—É—à–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç–µ
# Commands:
#   mutein - –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç/–æ—Ç–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–π —á–∞—Ç –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
# ---------------------------------------------------------------------------------

from telethon import events, Button
from telethon.tl.functions.channels import EditBannedRequest
from telethon.tl.types import ChatBannedRights
from .. import loader, utils

class MuteNewUsersMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≥–ª—É—à–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç–µ"""

    strings = {"name": "MuteNewUsers"}

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.muted_chats = self.db.get(self.strings["name"], "muted_chats", [])

    async def mute_user(self, chat_id, user_id):
        mute_rights = ChatBannedRights(until_date=None, send_messages=True)
        await self.client(EditBannedRequest(chat_id, user_id, mute_rights))
        button = [Button.inline("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –Ω–µ –±–æ—Ç", b"captcha_confirm")]
        await self.client.send_message(chat_id, "–í—ã –±—ã–ª–∏ –∑–∞–≥–ª—É—à–µ–Ω—ã. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –Ω–µ –±–æ—Ç.", buttons=button)

    @loader.tds
    async def muteincmd(self, message):
        """–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç/–æ—Ç–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–π —á–∞—Ç –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è"""
        chat_id = utils.get_chat_id(message)
        if chat_id in self.muted_chats:
            self.muted_chats.remove(chat_id)
            self.db.set(self.strings["name"], "muted_chats", self.muted_chats)
            await message.edit("<b>–ß–∞—Ç —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è.</b>")
        else:
            self.muted_chats.append(chat_id)
            self.db.set(self.strings["name"], "muted_chats", self.muted_chats)
            await message.edit("<b>–ß–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è.</b>")

    @loader.tds
    async def watcher(self, message):
        if message.chat_id not in self.muted_chats:
            return

        if message.user_joined or message.user_added:
            user_id = message.action_message.from_id if message.user_joined else message.action_message.added_by
            await self.mute_user(message.chat_id, user_id)

    @loader.callback_handler()
    async def captcha_callback(self, event):
        if event.data != b"captcha_confirm":
            return

        user_id = event.sender_id
        chat_id = event.chat_id
        unmute_rights = ChatBannedRights(until_date=None, send_messages=False)
        await self.client(EditBannedRequest(chat_id, user_id, unmute_rights))
        await event.edit("–í—ã –±—ã–ª–∏ —Ä–∞–∑–º—É—á–µ–Ω—ã. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.")
