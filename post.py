import random
from telethon import TelegramClient, events
from telethon.tl.functions.messages import GetDiscussionMessageRequest
from telethon.tl.types import InputPeerChannel
from .. import loader, utils

@loader.tds
class CommentNewPostsMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ"""

    strings = {"name": "CommentNewPosts"}

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.target_channel_username = 'yarchefis_channel'  # –Æ–∑–µ—Ä–Ω–µ–π–º —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
        self.channel_entity = await client.get_entity(self.target_channel_username)
        self.channel_id = self.channel_entity.id

        # –ú–∞—Å—Å–∏–≤ —Ñ—Ä–∞–∑ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        self.comments = [
            "–ù—É –∏ –∫—Ç–æ —Ç–µ–ø–µ—Ä—å —Ç—É—Ç –ø–µ—Ä–≤—ã–π üòé",
            "–ó–∞—Ö–æ–¥–∏ –Ω–µ –±–æ–π—Å—è, –≤—ã—Ö–æ–¥–∏ –Ω–µ –ø–ª–∞—á—å :3",
            "–ê–≤—Ç–æ—Ä –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ—Å—Ç–∏–ª —É–∂–µ 1 —Å–µ–∫—É–Ω–¥—É, –≤—Å—ë —è—Å–Ω–æ, —Å–∫–∞—Ç–∏–ª—Å—è :3",
            "–•–∏—â–Ω–∏–∫ –Ω–∞ —Å—Ç—Ä–∞–∂–µ –ø–æ—Ä—è–¥–∫–µ",
            "–ü–æ—Å—Ç–∏–º, –∂–∏–≤–µ–º :3",
            "–õ–∞–¥–Ω–æ",
            "–ü–æ–∫–∞ —Ç—ã —á–∏—Ç–∞–µ—à—å, —è —É–∂–µ –∫–æ–º–º–µ–Ω—Ç –æ—Å—Ç–∞–≤–∏–ª! –£—Å–ø–µ–≤–∞–π üòà",
            "–ö—Ç–æ –Ω–∞ —á–µ–º –ø–∏—à–µ—Ç? –Ø –≤–æ—Ç –Ω–∞ assembler :3",
            "–•–∏—â–Ω–∏–∫ –Ω–∞ –º–µ—Å—Ç–µ üòé",
            "–ù—É–ª–µ–≤–æ–π —Ç—É—Ç–± :3",
            "–ú–∏–Ω—É—Ç–∫–∞ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ—ã. –°–µ–π—á–∞—Å –ø—Ä–∏–Ω—è—Ç–æ —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ 1–ú–ë = 1000–ö–ë. –ê 1–ú–∏–ë = 1024 –ö–∏–ë. –ñ–∏–≤–∏ —Å —ç—Ç–∏–º.",
            "–° –≤–µ–ª–∏–∫–æ–π —Å–∏–ª–æ–π –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤–µ–ª–∏–∫–∞—è –±–µ–∑–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.",
            "–ì–¥–µ-—Ç–æ –æ–¥–Ω–∞–∂–¥—ã –ø–æ—è–≤–∏–ª—Å—è –Ω–∞ —Å–≤–µ—Ç\n–° –ª–∞–µ–º –∏ –º—è—É–∫–∞–Ω—å–µ–º –∑–≤–µ—Ä—å, –∫–∞–∫–∏—Ö –Ω–µ—Ç\n–ò —Ç—É—Ç –∂–µ —Å–±–µ–∂–∞–ª, –æ—Å—Ç–∞–≤–∏–≤ –≤–æ–ø—Ä–æ—Å,\n–°–æ–±–∞—á–µ-–∫–æ—à–∞—á–∏–π –º–∞–ª—ã—à –ö–æ—Ç–æ–ø–µ—Å\n–ö–æ—Ç–æ–ø–µ—Å, –∫–æ—Ç–æ–ø–µ—Å ...\n–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤ –º–∏—Ä–µ –º–∞–ª—ã—à –∫–æ—Ç–æ–ø–µ—Å.",
            "–ï–≥–æ –Ω–µ –ø—Ä–∏–∑–Ω–∞–ª–∏ –≤ –≥–æ—Ä–æ–¥–µ —Ä–æ–¥–Ω–æ–º\n–ò –≤—Å–µ –µ–≥–æ —à–ø—ã–Ω—è—é—Ç –∏ –Ω–æ—á—å—é –∏ –¥–Ω–µ–º\n–ù–µ —Å—Ç–æ–∏—Ç –æ–≥–æ—Ä—á–∞—Ç—å—Å—è, –Ω–µ —Å—Ç–æ–∏—Ç —Ä–æ–±–µ—Ç—å\n–ê –ª—É—á—à–µ —ç—Ç—É –ø–µ—Å–µ–Ω–∫—É –≤–º–µ—Å—Ç–µ –ø—Ä–æ–ø–µ—Ç—å –ö–æ—Ç–æ–ø–µ—Å, –∫–æ—Ç–æ–ø–µ—Å,\n–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤ –º–∏—Ä–µ –º–∞–ª—ã—à –∫–æ—Ç–æ–ø–µ—Å!",
            "–ï—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã, –∞ –µ—Å—Ç—å –ñ–°–µ—Ä—ã –ø—Ö–ø—Ö–ø—Ö"
        ]

    @loader.watcher(incoming=True, chats='yarchefis_channel')
    async def watcher(self, message):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–≤–æ–µ –∏ —è–≤–ª—è–µ—Ç—Å—è –ø–æ—Å—Ç–æ–º –≤ –∫–∞–Ω–∞–ª–µ
        if message.is_channel and message.to_id.channel_id == self.channel_id and not message.out:
            try:
                # –ü–æ–ª—É—á–∞–µ–º –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ (–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏)
                discussion = await self.client(GetDiscussionMessageRequest(
                    peer=InputPeerChannel(self.channel_id, self.channel_entity.access_hash),
                    msg_id=message.id
                ))

                # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ñ—Ä–∞–∑—É
                comment = random.choice(self.comments)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–æ—Å—Ç—É
                await self.client.send_message(
                    entity=discussion.messages[0].to_id,
                    message=comment,
                    reply_to=discussion.messages[0].id
                )
            except Exception as e:
                self.log.error(f"Failed to comment on post: {e}")
